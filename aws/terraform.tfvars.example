# NOTE: Rename this file to terraform.tfvars and edit according to your environment

# SB License and DNS zone
sb_license      = "starburstdata.license" # Full path to starburst license
dns_zone        = "fieldeng.starburstdata.net"
region          = "us-east-1"
s3_role         = ["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy","arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly","arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy","arn:aws:iam::aws:policy/AmazonS3FullAccess","arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"]

map_roles       = []
# e.g. [{rolearn    = "arn:aws:iam::188806360106:role/solution_architect",
#                     username   = "solution_architect",
#                     groups     = ["system:masters"]
#                     }]

# email address for certs
#email           = set here, in sensitive.auto.tfvars or in environment variable: $TF_VAR_email

# List of usernames to login to Trino & Ranger.
# NOTE: The first user in the list is assumed to be the admin user.
# The admin user has acess to both Trino and Ranger. The regular users only have access to Trino
# Use the admin user to set catalog and object permissions to the regular user in Ranger
admin_user      = "sbadmin"
reg_user1       = "engineer"
reg_user2       = "analyst"

# Helm Repository details
repository      = "https://harbor.starburstdata.net/chartrepo/starburstdata"
registry        = "harbor.starburstdata.net/starburstdata"
#repo_username   = set here, in sensitive.auto.tfvars or in environment variable: $TF_VAR_repo_username
#repo_password   = set here, in sensitive.auto.tfvars or in environment variable: $TF_VAR_repo_password
repo_version        = "362.0.1" # Version to deploy

# Optional tagging for cloud resources. Defined as a map of keys and values
# Replace with your own keys and values, or delete this if not needed
tags         = {cloud        = "aws",
                environment  = "demo",
                org          = "partner",
                team         = "partner",
                project      = "training",
                user         = "starburst"
                }

# Infrastructure control
create_rds      = true
create_k8s      = true
create_vpc      = true
create_bucket   = true

# K8s applications control
create_hive         = true
create_ranger       = true
create_trino        = true

create_nginx        = true